{"version":3,"sources":["../../src/models/event.js"],"names":["Event","app","events","OrderedMap","userId","offset","Promise","resolve","reject","ObjectID","console","log","query","$match","$eq","$project","_id","title","start","end","info","$skip","db","collection","aggregate","err","results","eventId","eventIdOb","remove","res","event","userId2","findOneAndUpdate","id","callback","findOne","result","_","toString","findEventById","set","obj","get","insertOne"],"mappings":"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","file":"event.js","sourcesContent":["//1. getAll by user\r\n//2. eventById \r\n//3. create\r\n//4. update\r\n//5. read for passing the event from eventById\r\nimport _ from 'lodash'\r\nimport {ObjectID} from 'mongodb'\r\nimport {OrderedMap} from 'immutable'\r\n\r\nexport default class Event {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this.events = new OrderedMap();\r\n    }\r\n\r\n    getAll(userId, offset = 0) {\r\n        return new Promise((resolve, reject) => {\r\n            userId = new ObjectID(userId);\r\n            console.log(\"userId in getAll : \" + userId)\r\n            \r\n              const query = [\r\n                {\r\n                    $match: {\r\n                        'userId' : {$eq: userId}\r\n                    }\r\n                },\r\n                {\r\n                    $project: {\r\n                        _id: true,\r\n                        userId: true,\r\n                        title: true,\r\n                        start: true,\r\n                        end: true,\r\n                        info : true\r\n                    }\r\n                },\r\n                {\r\n                    $skip: offset\r\n                }\r\n            ];\r\n            this.app.db.collection('events').aggregate(query,(err, results) => {\r\n                return err ? reject(err): resolve(results)\r\n            }); \r\n        })\r\n    }\r\n    delete(eventId){\r\n        let eventIdOb = new ObjectID(eventId);\r\n        return new Promise((resolve, reject) => {\r\n        this.app.db.collection('events').remove({_id : eventIdOb}, (err, res) => {\r\n            if(err){\r\n                console.log(\"error while deleting\");\r\n                return reject(err);\r\n            }\r\n            return resolve(res);\r\n        })\r\n    })\r\n}\r\n\r\n    update(event,eventId) {\r\n        let userId2 = new ObjectID(event.userId);\r\n        const eventIdOb = new ObjectID(eventId);    \r\n        return new Promise((resolve, reject) => {\r\n        this.app.db.collection('events').findOneAndUpdate({_id:eventIdOb}, \r\n            {\r\n                title: event.title,\r\n                start: event.start,\r\n                end: event.end,\r\n                info: event.info,\r\n                userId: userId2\r\n            }\r\n        , (err, res) => {\r\n            if(err) {\r\n                console.log(\"error occured during updating event\");\r\n                return reject(err);\r\n             }\r\n             return resolve(res);\r\n            \r\n        })\r\n    })\r\n        \r\n    }\r\n\r\n    findEventById(id, callback = () => {}) {\r\n        if(!id) {\r\n            console.log(\"id is null\")\r\n        }\r\n        const eventId = new ObjectID(id);\r\n        this.app.db.collection('events').findOne({_id:eventId}, (err, result) => {\r\n            if(err || !result) {\r\n                console.log(\"no event corresponding to \" + eventId)\r\n            }\r\n            return callback(null, result);\r\n        })\r\n    }\r\n\r\n    load(id) {\r\n        //id = `${id}`;\r\n        id = _.toString(id);\r\n        return new Promise((resolve, reject) => {\r\n            this.findEventById(id, (err,event) => {\r\n                if(!err && event) {\r\n                    this.events = this.events.set(id, event);\r\n                }\r\n                return err ? reject(err) : resolve(event)\r\n            })\r\n        })\r\n    }\r\n   \r\n\r\n    create(obj) {\r\n        return new Promise((resolve,reject) => {\r\n            console.log(\"from event models, obj _id value : \" + obj._id + \" title value : \" + obj.title)\r\n            const userId = new ObjectID(_.get(obj,'userId'));\r\n            console.log(\"userId : \" + userId);\r\n            const event = {\r\n                //_id: new ObjectID(id),\r\n                title: obj.title,\r\n                start: obj.start,\r\n                end: obj.end,\r\n                info : obj.info,\r\n                userId: userId       \r\n            };\r\n            this.app.db.collection('events').insertOne(event,(err) => {\r\n                if(err) {\r\n                    console.log(\"err in db.collection : \" + err)\r\n                    return reject(err);\r\n                }\r\n               return resolve(event);\r\n            })\r\n        })\r\n    }\r\n}\r\n"]}