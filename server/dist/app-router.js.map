{"version":3,"sources":["../src/app-router.js"],"names":["START_TIME","Date","AppRouter","app","setupRouter","bind","console","log","post","req","res","next","body","models","user","create","then","_","unset","status","json","catch","error","err","number","verify","result","request_id","code","reqId","check","event","get","userId","getAll","events","eventsarr","each","jsonEvent","JSON","stringify","ajsonEvnet","parse","push","message","eventId","load","update","tokenId","token","loadTokenAndUser","keyword","search","results","login","channelId","channel","members","query","_id","$in","options","name","created","find","users","filter","toString","limit","offset","c","memberIds","id","includes","getChannelMessages","messages","$lookup","from","localField","foreignField","as","$match","$all","$project","title","lastMessage","updated","online","$sort","$limit","aggregate","channels","logout"],"mappings":"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","file":"app-router.js","sourcesContent":["import moment from 'moment';\r\nimport _ from 'lodash'\r\n\r\nexport const START_TIME = new Date();\r\n\r\n\r\nexport default class AppRouter{\r\n\r\n\r\n    constructor(app){\r\n        this.app = app;\r\n        this.setupRouter = this.setupRouter.bind(this);\r\n        this.setupRouter();\r\n    }\r\n\r\n    setupRouter(){\r\n        const app = this.app;\r\n        console.log(\"App Router works!\")\r\n         /**\r\n         * @endpoint: /api/users\r\n         * @method: POST\r\n         **/\r\n        app.post('/api/users', (req, res, next) => {\r\n            const body = req.body;\r\n            app.models.user.create(body).then((user) =>{\r\n                _.unset(user, 'password');\r\n                return res.status(200).json(user);\r\n            }).catch(err => {\r\n                return res.status(503).json({error: err});\r\n            })\r\n        });\r\n        app.post('/api/verify', (req, res, next) => {\r\n            console.log(\"INSIDE api/user/verify app-router\")\r\n            const number = req.body.number;\r\n            console.log(\"number passed : \" + number);\r\n            app.models.user.verify(number).then((result) =>{\r\n                console.log(\"verify reqId result : \" + result.request_id)\r\n                return res.status(200).json(result);\r\n            }).catch(err => {\r\n                return res.status(503).json({error: err});\r\n            })\r\n        });\r\n        app.post('/api/check', (req, res, next) => {\r\n            const code = req.body.code;\r\n            const reqId = req.body.reqId;\r\n            app.models.user.check(reqId,code).then((result) =>{\r\n                return res.status(200).json(result);\r\n            }).catch(err => {\r\n                return res.status(503).json({error: err});\r\n            })\r\n        });\r\n\r\n        app.post('/api/events',(req,res) => {\r\n            \r\n            const body = req.body;\r\n            console.log(\"inside app-router : \" +body)\r\n            app.models.event.create(body).then((event) => {\r\n                return res.status(200).json(event)\r\n            }).catch(err => {\r\n                return res.status(503).json({error: err})\r\n            })\r\n        })\r\n        app.get('/api/events/:id', (req,res,next) => {\r\n            console.log(\"INSIDE app.get event \")\r\n            const userId = _.get(req,'params.id')                            \r\n                    this.app.models.event.getAll(userId).then((events) => {\r\n                        //console.log(\"INSIDE app.get event => userId : \" + userId)\r\n                        console.log(\"INSIDE this also, events : \" + events)\r\n                        var eventsarr = [];\r\n                        _.each(events,(event) => {\r\n                            var jsonEvent = JSON.stringify(event);\r\n                            var ajsonEvnet = JSON.parse(jsonEvent);\r\n                            eventsarr.push(ajsonEvnet)\r\n                        })\r\n                        \r\n                        return res.status(200).json(eventsarr);\r\n                    }).catch((err) => {\r\n                        console.log(\"inside app-router, event.getAll : \"+err);\r\n                        return res.status(404).json({error: {message: \"event not found \"}});\r\n                    })\r\n            \r\n\r\n            \r\n        })\r\n        app.get('/api/event/:id', (req,res,next) => {\r\n            console.log(\"inside event/:id method\");\r\n            const eventId = _.get(req,'params.id');\r\n            console.log(\"this is event Id : \" + eventId);\r\n            app.models.event.load(eventId).then((event) => {\r\n                return res.status(200).json(event);\r\n            }).catch(err => {\r\n                return res.status(400).json(err);\r\n            })\r\n        }) \r\n\r\n        app.post('/api/event/:id', (req,res) => {\r\n            const body = req.body;\r\n            console.log(\"inside app-router EDIT : \" +body)\r\n            const eventId = _.get(req,'params.id');\r\n            app.models.event.update(body,eventId).then((event) => {\r\n                return res.status(200).json(event);\r\n            }).catch(err => {\r\n                return res.status(400).json(err);\r\n            });       \r\n        })\r\n    \r\n\r\n        app.get('/api/users/me', (req, res, next) => {\r\n            let tokenId = req.get('authorization');\r\n            if (!tokenId) {\r\n                // get token from query\r\n                tokenId = _.get(req, 'query.auth');    \r\n            }\r\n            app.models.token.loadTokenAndUser(tokenId).then((token) => {\r\n                _.unset(token, 'user.password');\r\n                return res.json(token);\r\n            }).catch(err => {\r\n                return res.status(401).json({\r\n                    error: err\r\n                })    \r\n            });\r\n        });\r\n\r\n\r\n        app.post('/api/users/search', (req, res, next) => {\r\n            const keyword = _.get(req, 'body.search', '');\r\n            app.models.user.search(keyword).then((results) => {\r\n                return res.status(200).json(results);\r\n            }).catch((err) => {\r\n                return res.status(404).json({\r\n                    error: 'Not found.'\r\n                })\r\n            })\r\n\r\n        });\r\n\r\n\r\n\r\n        app.get('/api/users/:id', (req, res, next) => {\r\n            const userId = _.get(req, 'params.id');\r\n            app.models.user.load(userId).then((user) => {\r\n                _.unset(user, 'password');\r\n                return res.status(200).json(user);\r\n            }).catch(err => {\r\n                return res.status(404).json({\r\n                    error: err,\r\n                })\r\n            })\r\n        }); \r\n\r\n\r\n\r\n       \r\n        \r\n\r\n\r\n        app.post('/api/users/login', (req, res, next) => {\r\n            const body = _.get(req, 'body');\r\n            app.models.user.login(body).then((token) => {\r\n                _.unset(token, 'user.password');\r\n                return res.status(200).json(token);\r\n                }).catch(err => {\r\n                    return res.status(401).json({\r\n                        error: err\r\n                    })\r\n                })\r\n            })\r\n\r\n\r\n        app.get('/api/channels/:id', (req, res, next) => {\r\n            const channelId = _.get(req, 'params.id');\r\n            console.log(channelId);\r\n            if (!channelId) {\r\n                return res.status(404).json({error: {message: \"Not found.\"}});\r\n            }\r\n            app.models.channel.load(channelId).then((channel) => {   \r\n            // fetch all uses belong to memberId\r\n                const members = channel.members;\r\n                const query = {\r\n                    _id: {$in: members}\r\n                };\r\n                const options = {_id: 1, name: 1, created: 1};\r\n                app.models.user.find(query, options).then((users) => {\r\n                    channel.users = users;\r\n                    return res.status(200).json(channel);\r\n                }).catch(err => {\r\n                    return res.status(404).json({error: {message: \"Not found.\"}});\r\n                });\r\n            }).catch((err) =>{\r\n                return res.status(404).json({error: {message: \"Not found.\"}});\r\n            })\r\n        });\r\n        \r\n\r\n\r\n        app.get('/api/channels/:id/messages', (req, res, next) => {\r\n            let tokenId = req.get('authorization');\r\n            if (!tokenId) {\r\n                // get token from query\r\n                tokenId = _.get(req, 'query.auth');\r\n            }\r\n            app.models.token.loadTokenAndUser(tokenId).then((token) => {\r\n                const userId = token.userId;\r\n                // make sure user are logged in\r\n                // check if this user is inside of channel members. other retun 401\r\n                let filter = _.get(req, 'query.filter', null);\r\n                if (filter) {\r\n                    filter = JSON.parse(filter);\r\n                    console.log(filter);\r\n                }\r\n                const channelId = _.toString(_.get(req, 'params.id'));\r\n                const limit = _.get(filter, 'limit', 50);\r\n                const offset = _.get(filter, 'offset', 0);\r\n                // load channel\r\n                this.app.models.channel.load(channelId).then((c) => {\r\n                    const memberIds = _.get(c, 'members');\r\n                    const members = [];\r\n                    _.each(memberIds, (id) => {\r\n                        members.push(_.toString(id));\r\n                    })\r\n                    if (!_.includes(members, _.toString(userId))) {\r\n                        return res.status(401).json({error: {message: \"Access denied\"}});\r\n                    }\r\n                    this.app.models.message.getChannelMessages(channelId, limit, offset).then((messages) => {\r\n                        return res.status(200).json(messages);\r\n                    }).catch((err) => {\r\n                        return res.status(404).json({error: {message: \"Not found.\"}});\r\n                    })\r\n                }).catch((err) => {\r\n                    return res.status(404).json({error: {message: \"Not found.\"}});\r\n                })\r\n            }).catch((err) => {\r\n                return res.status(401).json({error: {message: \"Access denied\"}});\r\n            });\r\n        });\r\n        \r\n\r\n        app.get('/api/me/channels', (req, res, next) => {\r\n            let tokenId = req.get('authorization');\r\n            if (!tokenId) {\r\n                // get token from query\r\n                tokenId = _.get(req, 'query.auth');\r\n            }\r\n            app.models.token.loadTokenAndUser(tokenId).then((token) => {\r\n                const userId = token.userId;\r\n                const query = [\r\n                    {\r\n                        $lookup: {\r\n                            from: 'users',\r\n                            localField: 'members',\r\n                            foreignField: '_id',\r\n                            as: 'users',\r\n                        }\r\n                    },\r\n                    {\r\n                        $match: {\r\n                            members: {$all: [userId]}\r\n                        }\r\n                    },\r\n                    {\r\n                        $project: {\r\n                            _id: true,\r\n                            title: true,\r\n                            lastMessage: true,\r\n                            created: true,\r\n                            updated: true,\r\n                            userId: true,\r\n                            users: {\r\n                                _id: true,\r\n                                name: true,\r\n                                created: true,\r\n                                online: true\r\n                            },\r\n                            members: true,\r\n                        }\r\n                    },\r\n                    {\r\n                        $sort: {updated: -1, created: -1}\r\n                    },\r\n                    {\r\n                        $limit: 50,\r\n                    }\r\n                ];\r\n                app.models.channel.aggregate(query).then((channels) => {\r\n                    return res.status(200).json(channels);\r\n                }).catch((err) => {\r\n                    return res.status(404).json({error: {message: \"Not found.\"}});\r\n                })\r\n            }).catch(err => {\r\n                return res.status(401).json({\r\n                    error: \"Access denied.\"\r\n                })\r\n            });\r\n        });\r\n  \r\n\r\n        app.get('/api/me/logout', (req, res, next) => {\r\n            let tokenId = req.get('authorization');\r\n            if (!tokenId) {\r\n                // get token from query\r\n                tokenId = _.get(req, 'query.auth');\r\n            }\r\n            app.models.token.loadTokenAndUser(tokenId).then((token) => {\r\n                app.models.token.logout(token);\r\n                return res.status(200).json({\r\n                    message: 'Successful.'\r\n                });\r\n            }).catch(err => {\r\n                return res.status(401).json({error: {message: 'Access denied'}});\r\n            })\r\n        })\r\n\r\n        \r\n    }\r\n}\r\n"]}