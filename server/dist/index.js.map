{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","http","createServer","use","exposedHeaders","bodyParser","json","limit","wss","Server","wwwPath","path","join","__dirname","express","static","Database","connect","then","db","console","log","catch","err","models","Model","routers","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAGA;;;AAGAA,IAAII,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;;AAIAL,IAAII,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIAR,IAAIS,GAAJ,GAAU,IAAIC,UAAJ,CAAW;AACjBT,YAAQD,IAAIC;AADK,CAAX,CAAV;;AAIC;AACD,IAAMU,UAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAhB;;AAEAd,IAAII,GAAJ,CAAQ,GAAR,EAAaW,kBAAQC,MAAR,CAAeL,OAAf,CAAb;;AAEA;AACA,IAAIM,kBAAJ,GAAeC,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAQ;;AAElCC,YAAQC,GAAR,CAAY,oCAAZ;;AAEAtB,QAAIoB,EAAJ,GAASA,EAAT;AAEH,CAND,EAMGG,KANH,CAMS,UAACC,GAAD,EAAS;;AAGd,UAAMA,GAAN;AACH,CAVD;;AAcA;AACAxB,IAAIyB,MAAJ,GAAa,IAAIC,gBAAJ,CAAU1B,GAAV,CAAb;AACAA,IAAI2B,OAAJ,GAAc,IAAIC,mBAAJ,CAAc5B,GAAd,CAAd;;AAGAA,IAAIC,MAAJ,CAAW4B,MAAX,CAAkBC,QAAQC,GAAR,CAAYhC,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC1CsB,YAAQC,GAAR,6BAAsCtB,IAAIC,MAAJ,CAAW+B,OAAX,GAAqBC,IAA3D;AACP,CAFD;;kBAIejC,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport {version} from '../package.json'\r\nimport WebSocketServer, {Server} from 'ws';\r\nimport AppRouter from './app-router';\r\nimport Model from './models';\r\nimport Database from './database';\r\nimport path from 'path'\r\n\r\n\r\nconst PORT = 3001;\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\n\r\n//app.use(morgan('dev'));\r\n\r\n\r\napp.use(cors({\r\n    exposedHeaders: \"*\"\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\n\r\napp.wss = new Server({\r\n    server: app.server\r\n });\r\n\r\n // static www files use express\r\nconst wwwPath = path.join(__dirname, 'www');\r\n\r\napp.use('/', express.static(wwwPath));\r\n\r\n//Connect to Mongo Database\r\nnew Database().connect().then((db) => {\r\n\r\n    console.log(\"Successfully connected to database\");\r\n\r\n    app.db = db\r\n\r\n}).catch((err) => {\r\n\r\n\r\n    throw(err);\r\n});\r\n\r\n\r\n\r\n//End connect to MongoDB\r\napp.models = new Model(app);\r\napp.routers = new AppRouter(app);\r\n\r\n\r\napp.server.listen(process.env.PORT || PORT, () => {\r\n        console.log(`App is running on port ${app.server.address().port}`);\r\n});\r\n\r\nexport default app;"]}