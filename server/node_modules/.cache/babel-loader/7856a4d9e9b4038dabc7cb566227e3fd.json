{"ast":null,"code":"var _jsxFileName = \"/Users/youngshinmin/Desktop/software-project/app/src/components/user-form.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nexport default class UserForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      isLogin: true,\n      user: {\n        name: '',\n        email: '',\n        password: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextFieldChange = this.onTextFieldChange.bind(this);\n    this.onClickOutside = this.onClickOutside.bind(this);\n  }\n\n  onClickOutside(event) {\n    if (this.ref && !this.ref.contains(event.target)) {\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onClickOutside);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousedown', this.onClickOutside);\n  }\n\n  onSubmit(event) {\n    const {\n      user,\n      isLogin\n    } = this.state;\n    const {\n      store\n    } = this.props;\n    event.preventDefault();\n    this.setState({\n      message: null\n    }, () => {\n      if (isLogin) {\n        store.login(user.email, user.password).then(user => {\n          if (this.props.onClose) {\n            this.props.onClose();\n          }\n        }).catch(err => {\n          console.log(\"err\", err);\n          this.setState({\n            message: {\n              body: err,\n              type: 'error'\n            }\n          });\n        });\n      } else {\n        store.register(user).then(_ => {\n          this.setState({\n            message: {\n              body: 'User created.',\n              type: 'success'\n            }\n          }, () => {\n            // now login this user\n            store.login(user.email, user.password).then(() => {\n              if (this.props.onClose) {\n                this.props.onClose();\n              }\n            });\n          });\n        });\n      }\n    });\n  }\n\n  onTextFieldChange(event) {\n    let {\n      user\n    } = this.state;\n    const field = event.target.name;\n    user[field] = event.target.value;\n    this.setState({\n      user: user\n    });\n  }\n\n  render() {\n    const {\n      user,\n      message,\n      isLogin\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"user-form\",\n      ref: ref => this.ref = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, message ? React.createElement(\"p\", {\n      className: classNames('app-message', _.get(message, 'type')),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, _.get(message, 'body')) : null, !isLogin ? React.createElement(\"div\", {\n      className: \"form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      placeholder: 'Full name',\n      onChange: this.onTextFieldChange,\n      type: 'text',\n      value: _.get(user, 'name', ''),\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      value: _.get(user, 'email'),\n      onChange: this.onTextFieldChange,\n      type: \"email\",\n      placeholder: \"Email addresss...\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      value: _.get(user, 'password'),\n      onChange: this.onTextFieldChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, isLogin ? React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          isLogin: false\n        });\n      },\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Create an account?\") : null, React.createElement(\"button\", {\n      className: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, isLogin ? 'Sign In' : 'Create new account'))));\n  }\n\n}","map":{"version":3,"sources":["/Users/youngshinmin/Desktop/software-project/app/src/components/user-form.js"],"names":["React","Component","_","classNames","UserForm","constructor","props","state","message","isLogin","user","name","email","password","onSubmit","bind","onTextFieldChange","onClickOutside","event","ref","contains","target","onClose","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","store","preventDefault","setState","login","then","catch","err","console","log","body","type","register","field","value","render","get"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\n\n\nexport default class UserForm extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n\n        this.state = {\n            message: null,\n            isLogin: true,\n            user: {\n                name: '',\n                email: '',\n                password: ''\n            }\n        }\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onTextFieldChange = this.onTextFieldChange.bind(this)\n\n        this.onClickOutside = this.onClickOutside.bind(this);\n    }\n\n    onClickOutside(event) {\n\n        if (this.ref && !this.ref.contains(event.target)) {\n\n\n            if (this.props.onClose) {\n                this.props.onClose();\n            }\n\n        }\n    }\n\n    componentDidMount() {\n\n        window.addEventListener('mousedown', this.onClickOutside);\n\n    }\n\n    componentWillUnmount() {\n\n        window.removeEventListener('mousedown', this.onClickOutside);\n\n    }\n\n    onSubmit(event) {\n        const {user, isLogin} = this.state;\n        const {store} = this.props;\n\n        event.preventDefault();\n\n        this.setState({\n            message: null,\n        }, () => {\n\n\n            if(isLogin){\n                store.login(user.email, user.password).then((user) => {\n\n\n                    if (this.props.onClose) {\n                        this.props.onClose();\n                    }\n\n\n                }).catch((err) => {\n\n                    console.log(\"err\", err);\n\n                    this.setState({\n                        message: {\n                            body: err,\n                            type: 'error',\n                        }\n                    })\n                });\n            }else{\n\n                store.register(user).then((_)=> {\n\n                    this.setState({\n                        message: {\n                            body: 'User created.',\n                            type: 'success'\n                        }\n                    }, () => {\n\n                        // now login this user\n\n                        store.login(user.email, user.password).then(() => {\n\n                            if (this.props.onClose) {\n                                this.props.onClose();\n                            }\n                        })\n                    })\n                })\n            }\n\n\n        })\n\n\n    }\n\n    onTextFieldChange(event) {\n\n        let {user} = this.state;\n\n\n        const field = event.target.name;\n\n        user[field] = event.target.value;\n\n        this.setState({\n            user: user\n        });\n\n\n    }\n\n    render() {\n\n        const {user, message, isLogin} = this.state;\n\n        return (\n\n            <div className=\"user-form\" ref={(ref) => this.ref = ref}>\n\n                <form onSubmit={this.onSubmit} method=\"post\">\n                    {message ?\n                        <p className={classNames('app-message', _.get(message, 'type'))}>{_.get(message, 'body')}</p> : null}\n\n                    {!isLogin ?  <div className=\"form-item\">\n                        <label>Name</label>\n                        <input placeholder={'Full name'} onChange={this.onTextFieldChange} type={'text'} value={_.get(user, 'name', '')} name={\"name\"} />\n                    </div> : null }\n\n                    <div className=\"form-item\">\n                        <label>Email</label>\n                        <input value={_.get(user, 'email')} onChange={this.onTextFieldChange} type=\"email\"\n                               placeholder=\"Email addresss...\" name=\"email\"/>\n                    </div>\n\n                    <div className=\"form-item\">\n                        <label>Password</label>\n                        <input value={_.get(user, 'password')} onChange={this.onTextFieldChange} type=\"password\"\n                               placeholder=\"Password\" name=\"password\"/>\n                    </div>\n\n                    <div className=\"form-actions\">\n                        {isLogin ? <button onClick={() => {\n                            this.setState({\n                                isLogin: false,\n                            })\n\n                        }} type=\"button\">Create an account?\n                        </button> : null}\n\n                        <button className=\"primary\" type=\"submit\">{isLogin ? 'Sign In' : 'Create new account'}</button>\n                    </div>\n                </form>\n            </div>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}